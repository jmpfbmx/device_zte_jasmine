type gx_fpd, domain, binder_in_vendor_violators;
type gx_fpd_exec, exec_type, vendor_file_type, file_type;
type gx_fpd_data_file, file_type, data_file_type;
type gx_fpd_device, dev_type;
type sysfs_fingerprint, fs_type, sysfs_type;
permissive gx_fpd;
# gx_fpd
init_daemon_domain(gx_fpd)
binder_use(gx_fpd)

# callback to fingerprintd with binder
binder_call(gx_fpd, fingerprintd)
set_prop(fingerprintd, hwservicemanager_prop)
get_prop(fingerprintd, hwservicemanager_prop)
# need to find KeyStore and add self
allow gx_fpd self:capability { dac_override dac_read_search };

# allow HAL module to read dir contents
allow gx_fpd gx_fpd_data_file:file { create_file_perms };

# allow HAL module to read/write/unlink contents of this dir
allow gx_fpd gx_fpd_data_file:dir rw_dir_perms;

# Need to add auth tokens to KeyStore
use_keystore(gx_fpd)
allow gx_fpd keystore:keystore_key { add_auth };

# For permissions checking
binder_call(gx_fpd, system_server);
allow gx_fpd permission_service:service_manager find;

# allow system_file
allow gx_fpd system_file:file rx_file_perms;

# allow TEE
allow gx_fpd tee_device:chr_file rw_file_perms;

# allow goodix to read write device
allow gx_fpd gx_fpd_device:chr_file { read write ioctl open };

# allow access to ion
allow gx_fpd ion_device:chr_file { read open ioctl };

# R dir perms for firmware dir
r_dir_file(gx_fpd, firmware_file)

